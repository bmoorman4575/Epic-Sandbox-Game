var gdjs;(function(r){r.PixiFiltersTools.registerFilterCreator("Scene3D::Bloom",new class{makeFilter(t,a){return typeof THREE=="undefined"?new r.PixiFiltersTools.EmptyFilter:new class{constructor(){this.shaderPass=new THREE_ADDONS.UnrealBloomPass(new THREE.Vector2(256,256),1,0,0),this._isEnabled=!1}isEnabled(e){return this._isEnabled}setEnabled(e,s){return this._isEnabled===s?!0:s?this.applyEffect(e):this.removeEffect(e)}applyEffect(e){return e instanceof r.Layer?(e.getRenderer().addPostProcessingPass(this.shaderPass),this._isEnabled=!0,!0):!1}removeEffect(e){return e instanceof r.Layer?(e.getRenderer().removePostProcessingPass(this.shaderPass),this._isEnabled=!1,!0):!1}updatePreRender(e){}updateDoubleParameter(e,s){e==="strength"&&(this.shaderPass.strength=s),e==="radius"&&(this.shaderPass.radius=s),e==="threshold"&&(this.shaderPass.threshold=s)}getDoubleParameter(e){return e==="strength"?this.shaderPass.strength:e==="radius"?this.shaderPass.radius:e==="threshold"?this.shaderPass.threshold:0}updateStringParameter(e,s){}updateColorParameter(e,s){}getColorParameter(e){return 0}updateBooleanParameter(e,s){}getNetworkSyncData(){return{s:this.shaderPass.strength,r:this.shaderPass.radius,t:this.shaderPass.threshold}}updateFromNetworkSyncData(e){this.shaderPass.strength=e.s,this.shaderPass.radius=e.r,this.shaderPass.threshold=e.t}}}})})(gdjs||(gdjs={}));
//# sourceMappingURL=BloomEffect.js.map
